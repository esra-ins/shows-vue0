{"ast":null,"code":"import { ref } from 'vue';\nimport env from '@/env.js';\nexport default {\n  name: 'HomeView',\n  components: {},\n  setup() {\n    const shows = ref([]);\n    const topRatedShows = ref([]);\n    const imgBaseUrl = env.imgBaseUrl;\n    const GetTopRatedShows = () => {\n      const topRatedShowsUrl = `${env.baseUrl}tv/top_rated?${env.apikey}`;\n      fetch(topRatedShowsUrl).then(response => response.json()).then(data => {\n        topRatedShows.value = data.results;\n\n        //console.log(topRatedShows.value);\n      });\n    };\n\n    return {\n      shows,\n      GetTopRatedShows,\n      topRatedShows,\n      imgBaseUrl\n    };\n  }\n};","map":{"version":3,"names":["ref","env","name","components","setup","shows","topRatedShows","imgBaseUrl","GetTopRatedShows","topRatedShowsUrl","baseUrl","apikey","fetch","then","response","json","data","value","results"],"sources":["/home/esraisik/Desktop/shows-vue0-main/src/views/ShowView.vue"],"sourcesContent":["<template>\n    <div class=\"shows-list\">\n      <div class=\"top-rated-list mb-8 font-bold\">\n        <input class=\"cursor-pointer\" type=\"button\" value=\"TOP RATED TV-SHOWS\" :bind=\"GetTopRatedShows()\">\n        <div class=\"w-full overflow-hidden\">\n          <div class=\"inline-flex overflow-x-scroll w-full overflow-y-hidden\">\n            <div class=\"top-rated  m-4 w-32 h-60 min-w-fit\" v-for=\"show in topRatedShows\" :key=\"show.id\" >\n              <img :src=\"imgBaseUrl+show.poster_path\" class=\"max-h-40 rounded-xl\"/>\n              <div class=\"w-9 h-9 bg-black text-white text-center rounded-2xl -mt-4 pt-2 border-white relative\">{{show.vote_average}}</div>\n                <div class=\"w-min mt-1 min-w-fit\">{{show.name}}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n</template>\n  \n<script>\nimport {ref} from 'vue';\nimport env from '@/env.js';\n\nexport default {\n  name: 'HomeView',\n  components: {\n    \n  },\n  setup () {\n    const shows = ref([]);\n    const topRatedShows = ref([]);\n    const imgBaseUrl = env.imgBaseUrl;\n     \n    const GetTopRatedShows = () => {\n      const topRatedShowsUrl = `${env.baseUrl}tv/top_rated?${env.apikey}`;\n\n      fetch(topRatedShowsUrl).then(response => response.json()).then(data => {\n          topRatedShows.value=data.results;\n\n          //console.log(topRatedShows.value);\n      })\n    }\n\n    return {\n      shows,\n      GetTopRatedShows,\n      topRatedShows,\n      imgBaseUrl,\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"],"mappings":"AAkBA,SAAQA,GAAG,QAAO,KAAK;AACvB,OAAOC,GAAE,MAAO,UAAU;AAE1B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,CAEZ,CAAC;EACDC,KAAIA,CAAA,EAAK;IACP,MAAMC,KAAI,GAAIL,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMM,aAAY,GAAIN,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMO,UAAS,GAAIN,GAAG,CAACM,UAAU;IAEjC,MAAMC,gBAAe,GAAIA,CAAA,KAAM;MAC7B,MAAMC,gBAAe,GAAK,GAAER,GAAG,CAACS,OAAQ,gBAAeT,GAAG,CAACU,MAAO,EAAC;MAEnEC,KAAK,CAACH,gBAAgB,CAAC,CAACI,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAACG,IAAG,IAAK;QACnEV,aAAa,CAACW,KAAK,GAACD,IAAI,CAACE,OAAO;;QAEhC;MACJ,CAAC;IACH;;IAEA,OAAO;MACLb,KAAK;MACLG,gBAAgB;MAChBF,aAAa;MACbC;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}