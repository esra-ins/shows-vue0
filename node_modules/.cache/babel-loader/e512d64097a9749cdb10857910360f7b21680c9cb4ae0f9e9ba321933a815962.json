{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"home\"\n}, [/*#__PURE__*/_createCommentVNode(\" <img alt=\\\"Vue logo\\\" src=\\\"../assets/logo.png\\\"> \"), /*#__PURE__*/_createCommentVNode(\" <HelloWorld msg=\\\"Welcome to Your Vue.js App\\\"/> \"), /*#__PURE__*/_createCommentVNode(\" <header-comp-vue/> \")], -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  value: \"Search\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"movies-list\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"top-rated-list\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  class: \"popular-list\"\n};\nconst _hoisted_10 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers($event => $setup.SearchMovies(), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for a movie, tv show, person...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.search = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.search]]), _hoisted_2], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.movies, movie => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"movie\",\n      key: movie.id\n    }, [_createTextVNode(_toDisplayString(movie.title) + \" \" + _toDisplayString(movie.vote_average) + \" \", 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: $setup.imgBaseUrl + movie.poster_path\n    }, null, 8 /* PROPS */, _hoisted_4), _createCommentVNode(\" <img :src=\\\"'${env.imgBaseUrl}'+movie.poster_path\\\"/>  \"), _createCommentVNode(\" <img :src=\\\"imgUrl+'{{movie.poster_path}}'\\\"/> \")]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_5, _hoisted_6, _createCommentVNode(\" <input type=\\\"button\\\" value=\\\"TOP RATED MOVİES\\\" @click=\\\"GetTopRatedMovies\\\"> \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"input\", {\n    type: \"button\",\n    value: \"TOP RATED TV-SHOWS\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.GetTopRatedShows())\n  }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.topRatedShows, show => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"top-rated\",\n      key: show.id\n    }, [_createTextVNode(_toDisplayString(show.name) + \" \" + _toDisplayString(show.vote_average) + \" \", 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: $setup.imgBaseUrl + show.poster_path\n    }, null, 8 /* PROPS */, _hoisted_8)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"input\", {\n    type: \"button\",\n    value: \"POPULAR TV-SHOWS\",\n    onClick: _cache[3] || (_cache[3] = $event => $setup.GetPopularShows())\n  }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.popularShows, show => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"top-rated\",\n      key: show.id\n    }, [_createTextVNode(_toDisplayString(show.name) + \" \" + _toDisplayString(show.vote_average) + \" \", 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: $setup.imgBaseUrl + show.poster_path\n    }, null, 8 /* PROPS */, _hoisted_10)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createCommentVNode","type","value","_hoisted_1","onSubmit","_cache","_withModifiers","$event","$setup","SearchMovies","placeholder","search","_hoisted_2","_hoisted_3","_createElementBlock","_Fragment","_renderList","movies","movie","key","id","title","_toDisplayString","vote_average","src","imgBaseUrl","poster_path","_hoisted_5","_hoisted_6","_hoisted_7","onClick","GetTopRatedShows","topRatedShows","show","name","_hoisted_9","GetPopularShows","popularShows"],"sources":["/home/esraisik/Desktop/all-e/my-vue/theshow-vue/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <!-- <img alt=\"Vue logo\" src=\"../assets/logo.png\"> -->\n    <!-- <HelloWorld msg=\"Welcome to Your Vue.js App\"/> -->\n    <!-- <header-comp-vue/> -->\n  </div>\n   <form @submit.prevent=\"SearchMovies()\">\n    <input type=\"text\" placeholder=\"Search for a movie, tv show, person...\" v-model=\"search\"/>  \n    <input type=\"submit\" value=\"Search\"/>\n  </form>\n\n  <div class=\"movies-list\">\n    <div class=\"movie\" v-for=\"movie in movies\" :key=\"movie.id\">\n      {{movie.title}}\n      {{movie.vote_average}}\n        <img :src=\"imgBaseUrl+movie.poster_path\" />\n\n      <!-- <img :src=\"'${env.imgBaseUrl}'+movie.poster_path\"/>  -->\n      <!-- <img :src=\"imgUrl+'{{movie.poster_path}}'\"/> -->\n    </div>\n    <br/>\n    <hr/>\n\n      <!-- <input type=\"button\" value=\"TOP RATED MOVİES\" @click=\"GetTopRatedMovies\"> -->\n\n    <div class=\"top-rated-list\">\n      <input type=\"button\" value=\"TOP RATED TV-SHOWS\" @click=\"GetTopRatedShows()\">\n      <div class=\"top-rated\" v-for=\"show in topRatedShows\" :key=\"show.id\" >\n          {{show.name}}\n          {{show.vote_average}}\n        <img :src=\"imgBaseUrl+show.poster_path\" />\n      </div>\n    </div>\n\n    <div class=\"popular-list\">\n      <input type=\"button\" value=\"POPULAR TV-SHOWS\" @click=\"GetPopularShows()\">\n      <div class=\"top-rated\" v-for=\"show in popularShows\" :key=\"show.id\" >\n          {{show.name}}\n          {{show.vote_average}}\n        <img :src=\"imgBaseUrl+show.poster_path\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport env from '@/env.js';\n\nexport default {\n  name: 'HomeView',\n  components: {\n    \n  },\n  setup () {\n    const search = ref(\"\");\n    //const url = ref(\"\");\n    const movies = ref([]);\n    const topRatedShows = ref([]);\n    const popularShows = ref([]);\n    const imgBaseUrl = env.imgBaseUrl;\n\n\n    const SearchMovies = () => {\n      if (search.value != \"\") {\n        console.log(search.value);\n        \n        const searchUrl = `${env.baseUrl}search/movie?${env.apikey}&query=${search.value}`;\n        //const imgUrl=`${env.imgBaseUrl}`;\n        console.log(searchUrl);\n        \n        fetch(searchUrl).then(response => response.json()).then(data => {\n          //console.log(data);\n\n          movies.value = data.results;  //array name: results\n\n          search.value = \"\";\n          console.log(movies.value);\n        });\n      }\n    }\n\n    /*\n    return {\n      search,\n      movies,\n      SearchMovies,\n      imgUrl\n    }\n    */\n     \n    const GetTopRatedShows = () => {\n      const topRatedShowsUrl = `${env.baseUrl}tv/top_rated?${env.apikey}`;\n\n      fetch(topRatedShowsUrl).then(response => response.json()).then(data => {\n          topRatedShows.value=data.results;\n\n          //console.log(topRatedShows.value);\n      })\n    }\n\n    const GetPopularShows = () => {\n      const popularShowsUrl = `${env.baseUrl}tv/popular?${env.apikey}`;\n\n      fetch(popularShowsUrl).then(response => response.json()).then(data => {\n          popularShows.value = data.results;\n\n          //console.log(popularShows.value);\n      })\n    }\n\n    return {\n      search,\n      movies,\n      SearchMovies,\n      GetTopRatedShows,\n      topRatedShows,\n      imgBaseUrl,\n      GetPopularShows,\n      popularShows\n    }\n  }\n}\n</script>\n"],"mappings":";gCACEA,mBAAA,CAIM;EAJDC,KAAK,EAAC;AAAM,I,aACfC,mBAAA,uDAAsD,E,aACtDA,mBAAA,sDAAuD,E,aACvDA,mBAAA,wBAA2B,C;gCAI3BF,mBAAA,CAAqC;EAA9BG,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;EAGxBH,KAAK,EAAC;AAAa;;gCAStBD,mBAAA,CAAK;gCACLA,mBAAA,CAAK;;EAIAC,KAAK,EAAC;AAAgB;;;EAStBA,KAAK,EAAC;AAAc;;;6DAjC3BI,UAIM,EACLL,mBAAA,CAGM;IAHCM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,CAAAC,MAAA,IAAUC,MAAA,CAAAC,YAAY;sBAClCX,mBAAA,CAA0F;IAAnFG,IAAI,EAAC,MAAM;IAACS,WAAW,EAAC,wCAAwC;+DAAUF,MAAA,CAAAG,MAAM,GAAAJ,MAAA;iDAANC,MAAA,CAAAG,MAAM,E,GACvFC,UAAqC,C,4BAGvCd,mBAAA,CA+BM,OA/BNe,UA+BM,I,kBA9BJC,mBAAA,CAOMC,SAAA,QAAAC,WAAA,CAP6BR,MAAA,CAAAS,MAAM,EAAfC,KAAK;yBAA/BJ,mBAAA,CAOM;MAPDf,KAAK,EAAC,OAAO;MAA0BoB,GAAG,EAAED,KAAK,CAACE;0CACnDF,KAAK,CAACG,KAAK,IAAE,GACf,GAAAC,gBAAA,CAAEJ,KAAK,CAACK,YAAY,IAAE,GACpB,iBAAAzB,mBAAA,CAA2C;MAArC0B,GAAG,EAAEhB,MAAA,CAAAiB,UAAU,GAACP,KAAK,CAACQ;yCAE9B1B,mBAAA,4DAA6D,EAC7DA,mBAAA,oDAAqD,C;kCAEvD2B,UAAK,EACLC,UAAK,EAEH5B,mBAAA,qFAAkF,EAEpFF,mBAAA,CAOM,OAPN+B,UAOM,GANJ/B,mBAAA,CAA4E;IAArEG,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC,oBAAoB;IAAE4B,OAAK,EAAAzB,MAAA,QAAAA,MAAA,MAAAE,MAAA,IAAEC,MAAA,CAAAuB,gBAAgB;yBACxEjB,mBAAA,CAIMC,SAAA,QAAAC,WAAA,CAJgCR,MAAA,CAAAwB,aAAa,EAArBC,IAAI;yBAAlCnB,mBAAA,CAIM;MAJDf,KAAK,EAAC,WAAW;MAAgCoB,GAAG,EAAEc,IAAI,CAACb;0CAC1Da,IAAI,CAACC,IAAI,IAAE,GACb,GAAAZ,gBAAA,CAAEW,IAAI,CAACV,YAAY,IAAE,GACvB,iBAAAzB,mBAAA,CAA0C;MAApC0B,GAAG,EAAEhB,MAAA,CAAAiB,UAAU,GAACQ,IAAI,CAACP;;oCAI/B5B,mBAAA,CAOM,OAPNqC,UAOM,GANJrC,mBAAA,CAAyE;IAAlEG,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC,kBAAkB;IAAE4B,OAAK,EAAAzB,MAAA,QAAAA,MAAA,MAAAE,MAAA,IAAEC,MAAA,CAAA4B,eAAe;yBACrEtB,mBAAA,CAIMC,SAAA,QAAAC,WAAA,CAJgCR,MAAA,CAAA6B,YAAY,EAApBJ,IAAI;yBAAlCnB,mBAAA,CAIM;MAJDf,KAAK,EAAC,WAAW;MAA+BoB,GAAG,EAAEc,IAAI,CAACb;0CACzDa,IAAI,CAACC,IAAI,IAAE,GACb,GAAAZ,gBAAA,CAAEW,IAAI,CAACV,YAAY,IAAE,GACvB,iBAAAzB,mBAAA,CAA0C;MAApC0B,GAAG,EAAEhB,MAAA,CAAAiB,UAAU,GAACQ,IAAI,CAACP"},"metadata":{},"sourceType":"module","externalDependencies":[]}